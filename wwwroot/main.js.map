{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.gaurd.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/request.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor( private authService: AuthService, private router: Router,\r\n            private alertity: AlertifyService) {}\r\n  canActivate(): boolean {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.alertity.error('You are not loggedIn');\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty){\r\n            return confirm('Are you sure you want to continue? Any saved chanches will be lost.');\r\n        }\r\n        return true;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private router: Router,\r\n            private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private router: Router,\r\n            private authService: AuthService, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving your data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n    constructor(private userService: UserService, private router: Router,\r\n            private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers().pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\nconstructor() { }\r\n\r\n  confirm(message: string, OkCallback: () => any) {\r\n    alertify.confirm(message, function(e) {\r\n      if (e) {\r\n        OkCallback();\r\n      } else {}\r\n    });\r\n  }\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model)\r\n      .pipe(\r\n        map((response: any) => {\r\n          const user = response;\r\n          if (user) {\r\n            localStorage.setItem('token', user.token);\r\n            localStorage.setItem('RoleID', user.user.userRoles[0].roleID);\r\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'register', model);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if (error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Apllication-Error');\r\n                    if (applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        for (const key in serverError) {\r\n                            if (serverError[key]) {\r\n                                modalStateErrors += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { Request } from '../_models/request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n  baseUrl = environment.apiUrl + 'requests/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  constructor(private http: HttpClient) { }\n\n\n  sendrequest(request: Request) {\n    console.log(this.baseUrl + 'request/', request);\n    return this.http.post(this.baseUrl + 'request/', request);\n\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getUsers(): Observable<User[]> {\r\n      return this.http.get<User[]>(this.baseUrl + 'users');\r\n\r\n    }\r\n\r\n    getUser(id): Observable<User> {\r\n      return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n\r\n    }\r\n\r\n    updateUser(id: number, user: User) {\r\n        return this.http.put(this.baseUrl + 'users/' + id, user);\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService) {}\r\n  ngOnInit() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { BsDropdownModule, TabsModule} from 'ngx-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from 'ngx-gallery';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { AlertifyService } from './_services/alertify.service';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { UserService } from './_services/user.service';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.gaurd';\r\nimport { RequestService } from './_services/request.service';\r\n\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n\r\n}\r\n\r\n @NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      MemberListComponent,\r\n      ListsComponent,\r\n      MessagesComponent,\r\n      MemberCardComponent,\r\n      MemberDetailComponent,\r\n      MemberEditComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      BsDropdownModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      TabsModule.forRoot(),\r\n      NgxGalleryModule,\r\n      JwtModule.forRoot({\r\n         config: {\r\n            tokenGetter: tokenGetter,\r\n            whitelistedDomains: ['localhost:5000'],\r\n            blacklistedRoutes: ['localhost:5000/api/auth']\r\n         }\r\n      })\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorInterceptorProvider,\r\n      AlertifyService,\r\n      AuthGuard,\r\n      UserService,\r\n      MemberDetailResolver,\r\n      MemberListResolver,\r\n      MemberEditResolver,\r\n      PreventUnsavedChanges,\r\n      RequestService\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"@import url('https://netdna.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.css');\\r\\n@import url(https://fonts.googleapis.com/css?family=Lato:400,300,700);\\r\\nhtml {\\r\\n   height: 100%;\\r\\n}\\r\\nbody {\\r\\n/* Remember to use the other versions for IE 10 and older browsers! */\\r\\ndisplay: flex;\\r\\njustify-content: center;\\r\\nalign-items: center;\\r\\nmin-height: 100%;\\r\\nfont-family: 'lato', sans-serif;\\r\\ncolor: #fff;\\r\\nbackground: #222222;\\r\\nbackground: #16222A; /* fallback for old browsers */ /* Chrome 10-25, Safari 5.1-6 */\\r\\nbackground: linear-gradient(to top, #16222A , #3A6073); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\r\\n}\\r\\n.container {\\r\\n\\tbackground:rgba(58,63,68,0.5);\\r\\n  border-radius: 5px;\\r\\n  box-shadow: 0 1.5px 0 0 rgba(0,0,0,0.1);\\r\\n  width:450px;\\r\\n  display: flex;  \\r\\n  flex-direction: column;\\r\\n}\\r\\n.logo{\\r\\n  font-family: \\\"museo-slab\\\";  \\r\\n  font-size:20px;\\r\\n  text-align: center;\\r\\n  padding: 20px 20px 0;\\r\\n  margin:0;\\r\\n}\\r\\n.login-item {\\r\\n\\tcolor: #ffff;\\r\\n\\tpadding:25px 25px 0;\\r\\n\\tmargin: 20px 20px 0;\\t\\r\\n\\tborder-radius: 3px;\\r\\n}\\r\\ninput {\\r\\n  border: 0;\\r\\n  color: inherit;\\r\\n  font: inherit;\\r\\n  margin: 0;\\r\\n  outline: 0;\\r\\n  padding: 0;\\r\\n  transition: background-color .3s;\\r\\n}\\r\\n.user:before {\\r\\n  content: '\\\\f007';\\r\\n  font: 14px fontawesome;\\r\\n\\tcolor: #5b5b5b;\\r\\n}\\r\\n.lock:before {\\r\\n  content: '\\\\f023';\\r\\n  font: 14px fontawesome;\\r\\n\\tcolor: #5b5b5b;\\r\\n}\\r\\n.form input[type=\\\"password\\\"], .form input[type=\\\"text\\\"], .form input[type=\\\"submit\\\"] {\\r\\n  width: 100%;\\r\\n}\\r\\n.form-login label,\\r\\n.form-login input[type=\\\"text\\\"],\\r\\n.form-login input[type=\\\"password\\\"],\\r\\n.form-login input[type=\\\"submit\\\"] {\\r\\n  border-radius: 0.25rem;\\r\\n  padding: 1rem;\\r\\n  color: #3A3F44;  \\r\\n}\\r\\n.form-login label {\\r\\n  background-color: #222222;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n  padding-left: 1.25rem;\\r\\n  padding-right: 1.25rem;\\r\\n}\\r\\n.form-login input[type=\\\"text\\\"], .form-login input[type=\\\"password\\\"] {\\r\\n  background-color: #ffffff;\\r\\n  border-bottom-left-radius: 0;\\r\\n  border-top-left-radius: 0;\\r\\n}\\r\\n.form-login input[type=\\\"text\\\"]:focus, .form-login input[type=\\\"text\\\"]:hover, .form-login input[type=\\\"password\\\"]:focus, .form-login input[type=\\\"password\\\"]:hover {\\r\\n  background-color: #eeeeee;\\r\\n}\\r\\n.form-login input[type=\\\"submit\\\"] {\\r\\n  background-color: #00B9BC;\\r\\n  color: #eee;\\r\\n  font-weight: bold;\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n.form-login input[type=\\\"submit\\\"]:focus, .form-login input[type=\\\"submit\\\"]:hover {\\r\\n  background-color: #197071;\\r\\n}\\r\\n.form-field {\\r\\n  display: flex;\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n.hidden {\\r\\n  border: 0;\\r\\n  clip: rect(0 0 0 0);\\r\\n  height: 1px;\\r\\n  margin: -1px;\\r\\n  overflow: hidden;\\r\\n  padding: 0;\\r\\n  position: absolute;\\r\\n  width: 1px;\\r\\n}\\r\\n.text--center {\\r\\n  text-align: center;\\r\\n}\\r\\nnav.navbar.navbar-expand-md.navbar-dark {\\r\\n    display: none!important;\\r\\n}\"","module.exports = \"<script src=\\\"https://use.typekit.net/rjb4unc.js\\\"></script>\\r\\n<script>try{Typekit.load({ async: true });}catch(e){}</script>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"logo\\\">Member Login</div>\\r\\n    <div class=\\\"login-item\\\">\\r\\n      <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form form-login\\\" (ngSubmit)=\\\"login()\\\">\\r\\n        <div class=\\\"form-field\\\">\\r\\n          <label class=\\\"user\\\" for=\\\"login-username\\\"><span class=\\\"hidden\\\">Username</span></label>\\r\\n          <input id=\\\"login-username\\\" type=\\\"text\\\" name=\\\"username\\\"  class=\\\"form-input\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-field\\\">\\r\\n          <label class=\\\"lock\\\" for=\\\"login-password\\\">\\r\\n            <span class=\\\"hidden\\\">Password</span></label>\\r\\n          <input id=\\\"login-password\\\" type=\\\"password\\\" class=\\\"form-input\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-field\\\">       \\r\\n          <input [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\"  value=\\\"Log in\\\" />\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n   values: any;\r\n   model: any = {};\r\n\r\n  constructor(private http: HttpClient, public authService: AuthService, private alertify: AlertifyService,\r\n    private router: Router ) { }\r\n\r\n  ngOnInit() {\r\n     this.getValues();\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = true;\r\n  }\r\n\r\n  getValues() {\r\n    this.http.get('http://localhost:5000/api/values').subscribe(response => {\r\n      this.values = response;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  cancelRegisterMode(registerMode: boolean) {\r\n      this.registerMode = registerMode;\r\n  }\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      console.log();\r\n      this.alertify.success('Logged in successfully');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      if (String(localStorage.getItem('RoleID')) === '2') {\r\n          this.router.navigate(['/members']);\r\n      } else {\r\n          this.router.navigate(['/lists']);\r\n      }\r\n    });\r\n  }\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n}\r\n","module.exports = \"option {\\r\\n    font-family: 'FontAwesome', 'Second Font name';\\r\\n}\"","module.exports = \"<app-nav></app-nav>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-1\\\"></div>\\r\\n    <div class=\\\"col-lg-10\\\">\\r\\n      <div class=\\\"well bs-component\\\">\\r\\n        <form class=\\\"form-horizontal\\\" #requestForm=\\\"ngForm\\\" (ngSubmit)=\\\"sendRequestPost()\\\">\\r\\n          <fieldset>\\r\\n            <legend>Service Request</legend>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"inputEmail\\\" class=\\\"col-lg-2 control-label\\\">Department</label>\\r\\n              <div class=\\\"col-lg-10\\\">\\r\\n                <select class=\\\"form-control\\\" name=\\\"Department\\\" required [(ngModel)]=\\\"model.Department\\\" id=\\\"Department\\\">\\r\\n                  <option disabled selected=\\\"selected\\\">Select Department</option>\\r\\n                  <option value=\\\"1\\\">Silver</option>\\r\\n                  <option value=\\\"2\\\">Refurb</option>\\r\\n                  <option value=\\\"3\\\">Body</option>\\r\\n                  <option value=\\\"4\\\">LCD</option>\\r\\n                  <option value=\\\"5\\\">Paint</option>\\r\\n                  <option value=\\\"6\\\">Assmbling</option>\\r\\n                  <option value=\\\"7\\\">Lab Testing</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"inputPassword\\\" class=\\\"col-lg-2 control-label\\\">Issue</label>\\r\\n              <div class=\\\"col-lg-10\\\">\\r\\n                <select class=\\\"form-control\\\" name=\\\"Issue\\\" required [(ngModel)]=\\\"model.Issue\\\" id=\\\"Issue\\\">\\r\\n                  <option value='0'>Select Issue</option>\\r\\n                  <option value=\\\"1\\\">Change Serial</option>\\r\\n                  <option value=\\\"2\\\">Change Inhouse</option>\\r\\n                  <option value=\\\"3\\\">Delete Serial</option>\\r\\n                  <option value=\\\"4\\\">Stock Release Issue</option>\\r\\n                  <option value=\\\"5\\\">Stock Select Issue</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"textArea\\\" class=\\\"col-lg-2 control-label\\\">Comment</label>\\r\\n              <div class=\\\"col-lg-10\\\">\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"Comment\\\" required [(ngModel)]=\\\"model.Comment\\\" id=\\\"Comment\\\"></textarea>\\r\\n                <span class=\\\"glyphicon glyphicon-asterisk\\\"></span><span class=\\\"help-block\\\">A longer block of help text that breaks onto a new line and may extend beyond one line.</span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-lg-2 control-label\\\">Priorty</label>\\r\\n              <div class=\\\"col-lg-10\\\">\\r\\n                <select class=\\\"form-control\\\" name=\\\"Priorty\\\" required [(ngModel)]=\\\"model.Priorty\\\" id=\\\"Priorty\\\">\\r\\n                  <option disabled selected>Select Priorty</option>\\r\\n                  <option value=\\\"1\\\"><span>&#xf024;</span> High</option>\\r\\n                  <option value=\\\"2\\\"><span>&#xf024;</span> Medium</option>\\r\\n                  <option value=\\\"3\\\"><span>&#xf024;</span> Low</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\r\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </fieldset>\\r\\n        </form>\\r\\n      <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RequestService } from '../_services/request.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  model: any = {};\r\n  constructor(private requestService: RequestService, private alertify: AlertifyService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  sendRequestPost() {\r\n    this.requestService.sendrequest(this.model).subscribe(() => {\r\n      this.alertify.success('Request Sent Successfull');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2,1.2);\\r\\n            transform: scale(1.2,1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0,1.0);\\r\\n            transform: scale(1.0,1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\r\\n  <div class=\\\"card-img-wrapper\\\">\\r\\n    <img src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{ user.knownAs }}\\\" class=\\\"card-img-top\\\">\\r\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\r\\n        <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\r\\n                  [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\r\\n        <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\r\\n        <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-envelope\\\"></i></button></li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"card-body p-1\\\">\\r\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\r\\n        {{user.knownAs}},{{user.age}}\\r\\n    </h6>\\r\\n    <p class=\\\"card-text text-center text-muted\\\">{{user.city}}</p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<app-nav></app-nav>\\r\\n<div class=\\\"container mt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <h1>{{ user.knownAs}}'s Profile</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div>\\r\\n                <strong>Locations:</strong>\\r\\n                <p>{{user.city}}, {{user.country}}</p>\\r\\n              </div>\\r\\n              <div>\\r\\n                <strong>Age:</strong>\\r\\n                <p>{{user.age}}</p>\\r\\n              </div>\\r\\n              <div>\\r\\n                <strong>Last Active:</strong>\\r\\n                <p>{{user.lastActive}}</p>\\r\\n              </div>\\r\\n              <div>\\r\\n                <strong>Member Since:</strong>\\r\\n                <p>{{user.createdDate}}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n              <div class=\\\"btn-group d-flex\\\">\\r\\n                <button class=\\\"btn btn-primary w-100\\\">Like</button>\\r\\n                <button class=\\\"btn btn-success w-100\\\">Message</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"tab-panel\\\">\\r\\n          <tabset class=\\\"member-tabset\\\">\\r\\n            <tab heading=\\\"About {{user?.knownAs}}\\\">\\r\\n              <h4>Description</h4>\\r\\n              <p>{{user.introduction}}</p>\\r\\n              <h4>Looking for</h4>\\r\\n              <p>{{ user.lookingFor }}</p>\\r\\n            </tab>            \\r\\n            <tab heading=\\\"Interest\\\">\\r\\n              <h4>Interests</h4>\\r\\n              <p>{{user.interests}}</p>\\r\\n            </tab>           \\r\\n            <tab heading=\\\"Photos\\\">\\r\\n              <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\r\\n            </tab>          \\r\\n            <tab heading=\\\"Message\\\">\\r\\n              <p>Message will go here</p>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\r\n\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  user: User;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n\r\n  constructor(private userService: UserService, private alertify: AlertifyService,\r\n      private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n    getImages() {\r\n      const imageUrls = [];\r\n      for (let i = 0; i < this.user.photos.length; i++) {\r\n        imageUrls.push({\r\n          small: this.user.photos[i].url,\r\n          medium: this.user.photos[i].url,\r\n          big: this.user.photos[i].url,\r\n          descriptions : this.user.photos[i].description,\r\n        });\r\n      }\r\n      return imageUrls;\r\n    }\r\n}\r\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<app-nav></app-nav>\\r\\n<div class=\\\"container mt-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <h1>Your Profile</h1>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\r\\n            <strong>Information:</strong> you have made changes. Any unsaved changes will be lost.\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <div>\\r\\n                  <strong>Locations:</strong>\\r\\n                  <p>{{user.city}}, {{user.country}}</p>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <strong>Age:</strong>\\r\\n                  <p>{{user.age}}</p>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <strong>Last Active:</strong>\\r\\n                  <p>{{user.lastActive}}</p>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <strong>Member Since:</strong>\\r\\n                  <p>{{user.createdDate}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-footer\\\">\\r\\n                  <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <div class=\\\"tab-panel\\\">\\r\\n            <tabset class=\\\"member-tabset\\\">\\r\\n              <tab heading=\\\"Edit Profile\\\">\\r\\n                <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\r\\n                    <h4>Description</h4>\\r\\n                    <textarea name=\\\"introduction\\\" rows=\\\"7\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"user.introduction\\\"></textarea>\\r\\n                    <h4>Looking for</h4>\\r\\n                    <textarea name=\\\"lookingFor\\\" rows=\\\"7\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\r\\n                    <h4>Interests for</h4>\\r\\n                    <textarea name=\\\"interests\\\" rows=\\\"7\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"user.interests\\\"></textarea>\\r\\n                    <h4>Location Details:</h4>\\r\\n                    <div class=\\\"form-inline\\\">\\r\\n                        <label for=\\\"city\\\">City</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\r\\n                        <label for=\\\"city\\\">Country</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\r\\n                    </div>\\r\\n                </form>\\r\\n              </tab>            \\r\\n              <tab heading=\\\"Edit Photos\\\">\\r\\n                <p>Photo Upload will go here.</p>\\r\\n              </tab> \\r\\n            </tabset>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\r\n    private userService: UserService, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\r\n      this.alertify.success('Profile Updated');\r\n      this.editForm.reset(this.user);\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\r\\n       <app-member-card [user]=\\\"user\\\"></app-member-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n\r\n  constructor(private userService: UserService, private alertify: AlertifyService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'];\r\n    });\r\n  }\r\n\r\n  // loadUsers() {\r\n  //   this.userService.getUsers().subscribe((users: User[]) => {\r\n  //     this.users = users;\r\n  //   }, error => {\r\n  //     this.alertify.error(error);\r\n  //   });\r\n  // }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n<p>\\r\\n  messages works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".dropdown-toggle{\\r\\n    cursor: pointer;\\r\\n    color: #222!important;\\r\\n}\\r\\n.dropdown-item{\\r\\n    cursor: pointer;\\r\\n}\\r\\n.active {\\r\\n    background-color: #486767;\\r\\n    background-image: linear-gradient(to right, #4867A6, #329fec);\\r\\n    background: #4867c0;\\r\\n    background: linear-gradient(to right, #486752, #329FB8);\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark\\\" style=\\\"background-color: white;\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"class col-md-12\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">\\r\\n        <img src=\\\"assets/images/CompanyLogo.png\\\">\\r\\n      </a>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\r\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle (click)=\\\"false\\\">\\r\\n        Welcome {{ authService.decodedToken.unique_name | titlecase}}\\r\\n      </a>\\r\\n    \\r\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\">\\r\\n          <i class=\\\"fa fa-user\\\"></i> Edit Profile</a>\\r\\n        <div class=\\\"dropdown-devider\\\"></div>\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<header style=\\\" background: #eff1f2;\\\">  \\r\\n   <div class=\\\"toggle\\\" style=\\\"flex: 0 0 190px;\\\">\\r\\n    <button>Menu</button>\\r\\n  </div>   \\r\\n  <div class=\\\"navbar\\\">\\r\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navigation\\\" style=\\\"background-color: #eff1f2;\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\" style=\\\"color: #222;\\\">Users List</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\" style=\\\"color: #222;\\\">Request Lists</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\" style=\\\"color: #222;\\\">Reports</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <!-- navbar -->\\r\\n\\r\\n</header>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  constructor(public authService: AuthService, private alertify: AlertifyService,\r\n                private router: Router ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success('Logged in successfully');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/members']);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logout() {\r\n     localStorage.removeItem('token');\r\n     this.alertify.message('Logged out');\r\n     this.router.navigate(['/home']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n  <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" placeholder=\\\"Username\\\">\\r\\n  </div>\\r\\n  <!-- <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"favouritevalue\\\">what is your favourite value</label>\\r\\n    <select class=\\\"form-control\\\" id=\\\"favouritevalue\\\">\\r\\n      <option *ngFor=\\\"let value of valuesFromHome\\\" [value]=\\\"value\\\" >{{value.name}}</option>\\r\\n    </select>\\r\\n  </div> --> \\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"password\\\" placeholder=\\\"Password\\\" required name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group text-center\\\">\\r\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\r\\n    <button class=\\\"btn btn-default\\\" type=\\\"submit\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  // @Input() valuesFromHome: any;\r\n  @Output() cancelRegister = new EventEmitter();\r\n  model: any = {};\r\n  // registerMode = true;\r\n  constructor(private authService: AuthService, private alertify: AlertifyService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  register() {\r\n    this.authService.register(this.model).subscribe(() => {\r\n      this.alertify.success('Registration Successful');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n  cancel() {\r\n    this.alertify.warning('cancelled');\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.gaurd';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path: 'members', component: MemberListComponent,\r\n            resolve: {users: MemberListResolver}},\r\n            {path: 'members/:id', component: MemberDetailComponent,\r\n                            resolve: {user: MemberDetailResolver}},\r\n            {path: 'member/edit', component: MemberEditComponent,\r\n                            resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n            {path: 'messages', component: MessagesComponent},\r\n            {path: 'lists', component: ListsComponent},\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}